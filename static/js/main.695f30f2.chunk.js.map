{"version":3,"sources":["Todo.js","TodoList.js","FilterButton.js","App.js","index.js"],"names":["Todo","props","handleTodoCheck","toggleTodo","todo","id","onClick","draggable","onDragStart","e","handletDragStart","todoI","onDragEnter","dragging","handleDragEnter","className","getStyles","type","checked","complete","onChange","htmlFor","name","TodoList","todos","setTodos","filter","setFilter","filterList","useMatchMedia","FILTER_MAP","isDesktopResolution","useState","list","setList","setDragging","useEffect","dragItem","useRef","dragItemNode","item","console","log","current","target","addEventListener","handleDragEnd","setTimeout","targetItem","oldList","newList","JSON","parse","stringify","splice","removeEventListener","map","length","newTodos","FilterButton","isPressed","LOCAL_STORAGE_KEY","All","Active","Completed","FILTER_NAMES","Object","keys","App","todoNameRef","mediaQuery","initialValue","isMatching","setIsMatching","watcher","window","matchMedia","matches","listener","addListener","removeListener","storedItems","localStorage","getItem","setItem","isMobileResolution","onSubmit","preventDefault","value","prevTodos","uuidv4","ref","placeholder","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.695f30f2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Todo(props) {\r\n  function handleTodoCheck() {\r\n    props.toggleTodo(props.todo.id);\r\n  }\r\n  return (\r\n    <div\r\n      onClick={handleTodoCheck}\r\n      draggable\r\n      key={props.todo.id}\r\n      onDragStart={(e) => props.handletDragStart(e, props.todoI)}\r\n      onDragEnter={\r\n        props.dragging\r\n          ? (e) => {\r\n              props.handleDragEnter(e, props.todoI);\r\n            }\r\n          : null\r\n      }\r\n      className={props.dragging ? props.getStyles(props.todoI) : \"todo__item\"}\r\n    >\r\n      {/* {console.log(props.todoI)} */}\r\n      <input\r\n        type=\"checkbox\"\r\n        id={props.todo.id}\r\n        checked={props.todo.complete}\r\n        onChange={handleTodoCheck}\r\n      />\r\n      <label>\r\n        <span htmlFor={props.todo.id} className=\"custom__checkbox\"></span>\r\n        {props.todo.name}\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nexport default function TodoList({\r\n  todos,\r\n  toggleTodo,\r\n  setTodos,\r\n  filter,\r\n  setFilter,\r\n  filterList,\r\n  useMatchMedia,\r\n  FILTER_MAP,\r\n}) {\r\n  const isDesktopResolution = useMatchMedia(\"(min-width:665px)\", true);\r\n\r\n  function handleClearCompleted() {\r\n    const newTodos = todos.filter((todo) => !todo.complete);\r\n    setTodos(newTodos);\r\n    setFilter(\"All\");\r\n  }\r\n\r\n  const [list, setList] = useState(todos);\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setList(todos);\r\n  }, [setList, todos]);\r\n\r\n  const dragItem = useRef();\r\n  const dragItemNode = useRef();\r\n\r\n  const handletDragStart = (e, item) => {\r\n    console.log(\"Starting to drag\", item);\r\n\r\n    dragItemNode.current = e.target;\r\n    dragItemNode.current.addEventListener(\"dragend\", handleDragEnd);\r\n    dragItem.current = item;\r\n\r\n    setTimeout(() => {\r\n      setDragging(true);\r\n    }, 0);\r\n  };\r\n  const handleDragEnter = (e, targetItem) => {\r\n    console.log(\"Entering a drag target\", targetItem);\r\n    if (dragItemNode.current !== e.target) {\r\n      console.log(\"Target is NOT the same as dragged item\");\r\n      setTodos((oldList) => {\r\n        let newList = JSON.parse(JSON.stringify(oldList));\r\n\r\n        newList.splice(targetItem, 0, newList.splice(dragItem.current, 1)[0]);\r\n        dragItem.current = targetItem;\r\n        console.log(newList);\r\n        // localStorage.setItem(\"List\", JSON.stringify(newList));\r\n        return newList;\r\n      });\r\n    }\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    setDragging(false);\r\n    dragItem.current = null;\r\n    dragItemNode.current.removeEventListener(\"dragend\", handleDragEnd);\r\n    dragItemNode.current = null;\r\n  };\r\n  const getStyles = (item) => {\r\n    if (dragItem.current === item) {\r\n      return \"todo__item current\";\r\n    }\r\n    return \"todo__item\";\r\n  };\r\n\r\n  if (list) {\r\n    return (\r\n      <div className=\"list__container\">\r\n        {todos.filter(FILTER_MAP[filter]).map((todo, todoI) => {\r\n          return (\r\n            <Todo\r\n              key={todo.id}\r\n              todo={todo}\r\n              todoI={todoI}\r\n              toggleTodo={toggleTodo}\r\n              setTodos={setTodos}\r\n              dragging={dragging}\r\n              handletDragStart={handletDragStart}\r\n              getStyles={getStyles}\r\n              handleDragEnd={handleDragEnd}\r\n              handleDragEnter={handleDragEnter}\r\n            />\r\n          );\r\n        })}\r\n\r\n        <div className=\"controls\">\r\n          <div className=\"items__left\">\r\n            {todos.filter((todo) => !todo.complete).length} items left\r\n          </div>\r\n          {isDesktopResolution && filterList}\r\n          <button className=\"btn btn--clear\" onClick={handleClearCompleted}>\r\n            Clear Completed\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function FilterButton(props) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn filter--btn\"\r\n      aria-pressed={props.isPressed}\r\n      onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>{props.name}</span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./css/App.css\";\nimport TodoList from \"./TodoList\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport FilterButton from \"./FilterButton\";\n\nconst LOCAL_STORAGE_KEY = \"todoApp.todos\";\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (todo) => !todo.complete,\n  Completed: (todo) => todo.complete,\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nexport default function App() {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  const [filter, setFilter] = useState(\"All\");\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const useMatchMedia = (mediaQuery, initialValue) => {\n    const [isMatching, setIsMatching] = useState(initialValue);\n    useEffect(() => {\n      const watcher = window.matchMedia(mediaQuery);\n      setIsMatching(watcher.matches);\n      const listener = (matches) => {\n        setIsMatching(matches.matches);\n      };\n      if (watcher.addEventListener) {\n        watcher.addEventListener(\"change\", listener);\n      } else {\n        watcher.addListener(listener);\n      }\n      return () => {\n        if (watcher.removeEventListener) {\n          return watcher.removeEventListener(\"change\", listener);\n        } else {\n          return watcher.removeListener(listener);\n        }\n      };\n    }, [mediaQuery]);\n\n    return isMatching;\n  };\n\n  useEffect(() => {\n    const storedItems = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedItems) {\n      setTodos(storedItems);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleNewTodo(e) {\n    e.preventDefault();\n    const name = todoNameRef.current.value;\n    if (name === \"\") return;\n\n    setTodos((prevTodos) => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false }];\n    });\n\n    todoNameRef.current.value = null;\n  }\n\n  const isMobileResolution = useMatchMedia(\"(max-width:665px)\", true);\n\n  return (\n    <main>\n      <div className=\"App\">\n        <h1 className=\"header\">TODO</h1>\n        <form className=\"new__todo\" onSubmit={handleNewTodo}>\n          <label htmlFor=\"newTodo\" className=\"input__div\">\n            <span id=\"newCheck\" className=\"custom__checkbox\"></span>\n            <input\n              id=\"newTodo\"\n              ref={todoNameRef}\n              type=\"text\"\n              placeholder=\"Create a new todo...\"\n            />\n          </label>\n        </form>\n        <div className=\"list__container\">\n          <TodoList\n            FILTER_MAP={FILTER_MAP}\n            useMatchMedia={useMatchMedia}\n            filter={filter}\n            setFilter={setFilter}\n            filterList={filterList}\n            todos={todos}\n            setTodos={setTodos}\n            toggleTodo={toggleTodo}\n          />\n        </div>\n        {isMobileResolution && (\n          <div className=\"controls filters\">{filterList}</div>\n        )}\n      </div>\n    </main>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport \"./css/App.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}